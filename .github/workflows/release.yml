name: Build Electron App

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha.*'

permissions:
  contents: write

jobs:
  release:
    name: build & release

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]

    steps:
      - name: check out git repository
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 20.6.1

      - name: setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7.33.6
          run_install: true

      # - name: build windows app
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     npm run electron:build-win
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          pnpm run build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: cleanup artifacts for windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     npx rimraf "release/!(*.exe)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          find release -type f -not -name '*.dmg' -delete

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'release/**/*.dmg'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
